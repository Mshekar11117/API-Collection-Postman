{
	"info": {
		"_postman_id": "09b33050-8a31-4d57-8bb6-72277844191b",
		"name": "NeprisWeb V5 SmokeSuite",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19437504"
	},
	"item": [
		{
			"name": "01.Create a Teacher Requested Session in Requested status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let Response = pm.response.json();\r",
							"console.log(Response)\r",
							"\r",
							"eval(pm.environment.get(\"commonTests\"))();\r",
							"\r",
							"pm.test(\"Veirfy the length of the properties\", function () {\r",
							"    pm.expect(Object.keys(Response).length).to.eql(4)\r",
							"})\r",
							"\r",
							"pm.test(\"Veirfy the properties of Response\", function () {\r",
							"    pm.expect(Response).to.have.property(\"id\")\r",
							"    pm.expect(Response).to.have.property(\"pendingSession\")\r",
							"    pm.expect(Response).to.have.property(\"status\")\r",
							"    pm.expect(Response).to.have.property(\"statusCode\")\r",
							"})\r",
							"\r",
							"pm.test(\"Assigning environment value to Response.id\", function(){\r",
							"    pm.environment.set(\"TRSessionId\", Response.id)\r",
							"})\r",
							"\r",
							"\r",
							"pm.test(\"Validate schema\", () => {\r",
							"    pm.response.to.have.jsonSchema(pm.variables.get(\"schema\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    { key: \"UserName\", value: pm.environment.get('educator_username') },\r",
							"    { key: \"Password\", value: pm.environment.get('educator_password') },\r",
							"    { key: \"redirect\", value: \"v5\" },\r",
							"    { key: \"AppName\", value: \"v5-qa4\" },\r",
							"    { key: \"SubDomain\", value: \"qa4\" },\r",
							"    { key: \"ReturnUrl\", value: \"/app/dashboard\" },\r",
							"    { key: \"RememberMe\", value: \"false\" }\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"\r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});\r",
							"\r",
							"\r",
							"const schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"id\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"pendingSession\": {\r",
							"            \"type\": \"boolean\"\r",
							"        },\r",
							"        \"status\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"statusCode\": {\r",
							"            \"type\": \"integer\"\r",
							"        }\r",
							"    },\r",
							"    \"required\": [\r",
							"        \"id\",\r",
							"        \"pendingSession\",\r",
							"        \"status\",\r",
							"        \"statusCode\"\r",
							"    ]\r",
							"}\r",
							"pm.variables.set(\"schema\", schema)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userAuthId\":{{educator_UserAuthId}},\r\n    \"topic\":\"Indian Music forms {{randomID}}\",\r\n    \"subjects\":[\"Performing Arts\"],\r\n    \"grades\":[\"Grade8\",\"Grade9\",\"Grade10\"],\r\n    \"description\":\"<p>Description of the Event</p>\",\r\n    \"outcomes\":\"<p>Out comes</p>\",\r\n    \"questions\":\"<p>Any Questions</p>\",\r\n    \"dates\":{{timestampUtcIso8601more}},\r\n    \"industries\":[],\r\n    \"companies\":[],\r\n    \"skills\":[],\r\n    \"duration\":90,\r\n    \"notes\":\"\",\r\n    \"draft\":false,\r\n    \"studentCount\":30,\r\n    \"allowThirdParty\":true,\r\n    \"sessionTypeId\":6,\r\n    \"classIds\":[],\r\n    \"recordingConsent\":true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/CreateSessionRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"CreateSessionRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "02.Verify if session is returned as part of 'Requested' sessions of the requester",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});\r",
							"\r",
							"\r",
							"const schema={\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"mySessions\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"                {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"id\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"title\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"description\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"requesterName\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"schoolName\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"schoolDistrictName\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"subjects\": {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": [\r",
							"                {\r",
							"                  \"type\": \"string\"\r",
							"                }\r",
							"              ]\r",
							"            },\r",
							"            \"grades\": {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": [\r",
							"                {\r",
							"                  \"type\": \"string\"\r",
							"                },\r",
							"                {\r",
							"                  \"type\": \"string\"\r",
							"                },\r",
							"                {\r",
							"                  \"type\": \"string\"\r",
							"                }\r",
							"              ]\r",
							"            },\r",
							"            \"requesterId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"schoolId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"schoolDistrictId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"expertSuggested\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"status\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"dateOptions\": {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": [\r",
							"                {\r",
							"                  \"type\": \"string\"\r",
							"                }\r",
							"              ]\r",
							"            },\r",
							"            \"combineDateOption\": {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"id\",\r",
							"            \"title\",\r",
							"            \"description\",\r",
							"            \"requesterName\",\r",
							"            \"schoolName\",\r",
							"            \"schoolDistrictName\",\r",
							"            \"subjects\",\r",
							"            \"grades\",\r",
							"            \"requesterId\",\r",
							"            \"schoolId\",\r",
							"            \"schoolDistrictId\",\r",
							"            \"expertSuggested\",\r",
							"            \"status\",\r",
							"            \"dateOptions\",\r",
							"            \"combineDateOption\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    },\r",
							"    \"totalCount\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"fetchedCount\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"status\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"statusCode\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"mySessions\",\r",
							"    \"totalCount\",\r",
							"    \"fetchedCount\",\r",
							"    \"status\",\r",
							"    \"statusCode\"\r",
							"  ]\r",
							"}\r",
							"pm.variables.set(\"schema\", schema)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let Response = pm.response.json();\r",
							"console.log(Response)\r",
							"\r",
							"eval(pm.environment.get(\"commonTests\"))();\r",
							"\r",
							"pm.test(\"Veirfy the length of the properties\", function () {\r",
							"    pm.expect(Object.keys(Response).length).to.eql(5)\r",
							"})\r",
							"\r",
							"pm.test(\"Veirfy the properties of Response\", function () {\r",
							"    pm.expect(Response).to.have.property(\"mySessions\")\r",
							"    pm.expect(Response).to.have.property(\"totalCount\")\r",
							"    pm.expect(Response).to.have.property(\"fetchedCount\")\r",
							"    pm.expect(Response).to.have.property(\"status\")\r",
							"    pm.expect(Response).to.have.property(\"statusCode\")\r",
							"})\r",
							"\r",
							"pm.test(\"Verify if TRS created is returned as part of this response\", function () {\r",
							"    pm.expect(Response.mySessions[0].id).to.eql(pm.environment.get('TRSessionId'))\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate schema\", () => {\r",
							"    pm.response.to.have.jsonSchema(pm.variables.get(\"schema\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"limit\":12,\r\n    \"offset\":0,\r\n    \"userAuthId\":{{educator_UserAuthId}},\r\n    \"isPending\":false,\r\n    \"status\":[\"Requested\"]\r\n}"
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/GetMySessionRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"GetMySessionRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "03.Verify that other Educators don't see sign up option now",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('participant1_username'),\r",
							"    Password: pm.environment.get('participant1_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('participant1_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('participant1_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});\r",
							"\r",
							"const schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"sessionDetail\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"topic\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"subjects\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"id\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"name\": {\r",
							"                  \"type\": \"string\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"id\",\r",
							"                \"name\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"grades\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"description\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"outcomes\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"questions\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"industries\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": {}\r",
							"        },\r",
							"        \"skills\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": {}\r",
							"        },\r",
							"        \"companies\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": {}\r",
							"        },\r",
							"        \"studentCount\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"dates\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"duration\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"draft\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"allowThirdParty\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"sessionId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"presenterId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"presenter\": {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"userAuthId\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"userAuthId\"\r",
							"          ]\r",
							"        },\r",
							"        \"requesterId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"classIds\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": {}\r",
							"        },\r",
							"        \"status\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"sessionType\": {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"id\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"name\": {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"id\",\r",
							"            \"name\"\r",
							"          ]\r",
							"        },\r",
							"        \"educatorClass\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": {}\r",
							"        },\r",
							"        \"recordingConsent\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"followingSession\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"accessLevel\": {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"canShare\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"canFollow\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"canCopySession\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"canEdit\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"canDelete\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"canWithdraw\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"userPartOfTheSession\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"thirdPartyThresoldElapsed\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"inviteJoinThirdParty\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showUpgradePlan\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"inviteSessionRecordingSubscription\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"sessionRecordingSubscription\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"inviteAcceptSession\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showExpresssInterest\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"canUploadDocuments\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showStudentPendingParentConsent\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showStudentSessionCode\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showJoinLiveSession\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"hideSelfAssessmentVideo\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showSessionAccessCode\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showSessionConfirmed\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showMessageToAll\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"redirectToDashboard\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"eventId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"eventSession\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"canAccessVideo\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showSessionRecordingSubscribed\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showSessionRecordingSubscription\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showTop5RequestedSession\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"inviteLoginJoinThirdParty\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"inviteLoginSessionRecordingSubscription\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"inviteLoginAcceptSession\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showJoinThirdPartySession\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showLoggedInAsEducatorToAccept\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showAcceptSession\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showHashTagMessage\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"lessonCollection\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"isPresenterAndBlocked\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"isHigherEdStudent\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"canAcceptOrDeclinePendingSession\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"alreadyExpressedInterest\": {\r",
							"              \"type\": \"boolean\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"canShare\",\r",
							"            \"canFollow\",\r",
							"            \"canCopySession\",\r",
							"            \"canEdit\",\r",
							"            \"canDelete\",\r",
							"            \"canWithdraw\",\r",
							"            \"userPartOfTheSession\",\r",
							"            \"thirdPartyThresoldElapsed\",\r",
							"            \"inviteJoinThirdParty\",\r",
							"            \"showUpgradePlan\",\r",
							"            \"inviteSessionRecordingSubscription\",\r",
							"            \"sessionRecordingSubscription\",\r",
							"            \"inviteAcceptSession\",\r",
							"            \"showExpresssInterest\",\r",
							"            \"canUploadDocuments\",\r",
							"            \"showStudentPendingParentConsent\",\r",
							"            \"showStudentSessionCode\",\r",
							"            \"showJoinLiveSession\",\r",
							"            \"hideSelfAssessmentVideo\",\r",
							"            \"showSessionAccessCode\",\r",
							"            \"showSessionConfirmed\",\r",
							"            \"showMessageToAll\",\r",
							"            \"redirectToDashboard\",\r",
							"            \"eventId\",\r",
							"            \"eventSession\",\r",
							"            \"canAccessVideo\",\r",
							"            \"showSessionRecordingSubscribed\",\r",
							"            \"showSessionRecordingSubscription\",\r",
							"            \"showTop5RequestedSession\",\r",
							"            \"inviteLoginJoinThirdParty\",\r",
							"            \"inviteLoginSessionRecordingSubscription\",\r",
							"            \"inviteLoginAcceptSession\",\r",
							"            \"showJoinThirdPartySession\",\r",
							"            \"showLoggedInAsEducatorToAccept\",\r",
							"            \"showAcceptSession\",\r",
							"            \"showHashTagMessage\",\r",
							"            \"lessonCollection\",\r",
							"            \"isPresenterAndBlocked\",\r",
							"            \"isHigherEdStudent\",\r",
							"            \"canAcceptOrDeclinePendingSession\",\r",
							"            \"alreadyExpressedInterest\"\r",
							"          ]\r",
							"        },\r",
							"        \"expertSuggested\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"canPresentAsPerVerificationStatus\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"presenterVerificationStatus\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"verificationRequired\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"favoriteSession\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"careerClusters\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": {}\r",
							"        },\r",
							"        \"requesterDetail\": {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"participantAuthId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"displayName\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"email\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"profileImageUrl\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"companyId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"schoolName\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"schoolId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"sessionParticipantType\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"averageRating\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"participantAuthId\",\r",
							"            \"displayName\",\r",
							"            \"email\",\r",
							"            \"profileImageUrl\",\r",
							"            \"companyId\",\r",
							"            \"schoolName\",\r",
							"            \"schoolId\",\r",
							"            \"sessionParticipantType\",\r",
							"            \"averageRating\"\r",
							"          ]\r",
							"        },\r",
							"        \"inviteeCount\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"videoAvailable\": {\r",
							"          \"type\": \"boolean\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"topic\",\r",
							"        \"subjects\",\r",
							"        \"grades\",\r",
							"        \"description\",\r",
							"        \"outcomes\",\r",
							"        \"questions\",\r",
							"        \"industries\",\r",
							"        \"skills\",\r",
							"        \"companies\",\r",
							"        \"studentCount\",\r",
							"        \"dates\",\r",
							"        \"duration\",\r",
							"        \"draft\",\r",
							"        \"allowThirdParty\",\r",
							"        \"sessionId\",\r",
							"        \"presenterId\",\r",
							"        \"presenter\",\r",
							"        \"requesterId\",\r",
							"        \"classIds\",\r",
							"        \"status\",\r",
							"        \"sessionType\",\r",
							"        \"educatorClass\",\r",
							"        \"recordingConsent\",\r",
							"        \"followingSession\",\r",
							"        \"accessLevel\",\r",
							"        \"expertSuggested\",\r",
							"        \"canPresentAsPerVerificationStatus\",\r",
							"        \"presenterVerificationStatus\",\r",
							"        \"verificationRequired\",\r",
							"        \"favoriteSession\",\r",
							"        \"careerClusters\",\r",
							"        \"requesterDetail\",\r",
							"        \"inviteeCount\",\r",
							"        \"videoAvailable\"\r",
							"      ]\r",
							"    },\r",
							"    \"status\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"statusCode\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"sessionDetail\",\r",
							"    \"status\",\r",
							"    \"statusCode\"\r",
							"  ]\r",
							"}\r",
							"pm.variables.set(\"schema\", schema)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let Response = pm.response.json();\r",
							"console.log(Response)\r",
							"\r",
							"pm.test(\"Veirfy the length of the properties\", function () {\r",
							"    pm.expect(Object.keys(Response).length).to.eql(3)\r",
							"})\r",
							"\r",
							"pm.test('Verify if sessionId is equal to ' + pm.environment.get('TRSessionId'), function() {\r",
							"   pm.expect(Response.sessionDetail.sessionId).to.eql(pm.environment.get(\"TRSessionId\"))\r",
							"});\r",
							"\r",
							"pm.test('Verify if inviteAcceptSession is false for Educators', function () {\r",
							"    pm.expect(Response.sessionDetail.accessLevel.inviteAcceptSession).to.be.false;\r",
							"});\r",
							"\r",
							"pm.test('Verify if inviteJoinThirdParty is false now', function () {\r",
							"    pm.expect(Response.sessionDetail.accessLevel.inviteJoinThirdParty).to.be.false;\r",
							"});\r",
							"\r",
							"pm.test('Verify that presenter UserAuthId is 0 now', function () {\r",
							"    pm.expect(Response.sessionDetail.presenter.userAuthId).equals(0);\r",
							"});\r",
							"\r",
							"pm.test('Verify the value of requester ID', function(){\r",
							"    let reuesterID = pm.environment.get(\"educator_UserAuthId\")\r",
							"    pm.expect(Response.sessionDetail.requesterId).to.eql(reuesterID)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate schema\", () => {\r",
							"    pm.response.to.have.jsonSchema(pm.variables.get(\"schema\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"sessionId\":{{TRSessionId}},\r\n    \"userAuthId\":{{participant1_UserAuthId}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/SessionDetailRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"SessionDetailRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "04.Verify if professional can view signup option and SignUp to present the session",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('presenter_username'),\r",
							"    Password: pm.environment.get('presenter_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('presenter_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('presenter_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});\r",
							"\r",
							"const schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"sessionDetail\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"topic\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"subjects\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"id\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"name\": {\r",
							"                  \"type\": \"string\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"id\",\r",
							"                \"name\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"grades\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"description\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"outcomes\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"questions\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"industries\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": {}\r",
							"        },\r",
							"        \"skills\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": {}\r",
							"        },\r",
							"        \"companies\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": {}\r",
							"        },\r",
							"        \"studentCount\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"dates\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"duration\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"draft\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"allowThirdParty\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"sessionId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"presenterId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"presenter\": {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"userAuthId\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"userAuthId\"\r",
							"          ]\r",
							"        },\r",
							"        \"requesterId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"classIds\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": {}\r",
							"        },\r",
							"        \"status\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"sessionType\": {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"id\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"name\": {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"id\",\r",
							"            \"name\"\r",
							"          ]\r",
							"        },\r",
							"        \"educatorClass\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": {}\r",
							"        },\r",
							"        \"recordingConsent\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"followingSession\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"accessLevel\": {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"canShare\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"canFollow\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"canCopySession\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"canEdit\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"canDelete\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"canWithdraw\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"userPartOfTheSession\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"thirdPartyThresoldElapsed\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"inviteJoinThirdParty\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showUpgradePlan\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"inviteSessionRecordingSubscription\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"sessionRecordingSubscription\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"inviteAcceptSession\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showExpresssInterest\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"canUploadDocuments\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showStudentPendingParentConsent\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showStudentSessionCode\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showJoinLiveSession\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"hideSelfAssessmentVideo\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showSessionAccessCode\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showSessionConfirmed\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showMessageToAll\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"redirectToDashboard\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"eventId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"eventSession\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"canAccessVideo\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showSessionRecordingSubscribed\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showSessionRecordingSubscription\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showTop5RequestedSession\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"inviteLoginJoinThirdParty\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"inviteLoginSessionRecordingSubscription\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"inviteLoginAcceptSession\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showJoinThirdPartySession\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showLoggedInAsEducatorToAccept\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showAcceptSession\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"showHashTagMessage\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"lessonCollection\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"isPresenterAndBlocked\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"isHigherEdStudent\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"canAcceptOrDeclinePendingSession\": {\r",
							"              \"type\": \"boolean\"\r",
							"            },\r",
							"            \"alreadyExpressedInterest\": {\r",
							"              \"type\": \"boolean\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"canShare\",\r",
							"            \"canFollow\",\r",
							"            \"canCopySession\",\r",
							"            \"canEdit\",\r",
							"            \"canDelete\",\r",
							"            \"canWithdraw\",\r",
							"            \"userPartOfTheSession\",\r",
							"            \"thirdPartyThresoldElapsed\",\r",
							"            \"inviteJoinThirdParty\",\r",
							"            \"showUpgradePlan\",\r",
							"            \"inviteSessionRecordingSubscription\",\r",
							"            \"sessionRecordingSubscription\",\r",
							"            \"inviteAcceptSession\",\r",
							"            \"showExpresssInterest\",\r",
							"            \"canUploadDocuments\",\r",
							"            \"showStudentPendingParentConsent\",\r",
							"            \"showStudentSessionCode\",\r",
							"            \"showJoinLiveSession\",\r",
							"            \"hideSelfAssessmentVideo\",\r",
							"            \"showSessionAccessCode\",\r",
							"            \"showSessionConfirmed\",\r",
							"            \"showMessageToAll\",\r",
							"            \"redirectToDashboard\",\r",
							"            \"eventId\",\r",
							"            \"eventSession\",\r",
							"            \"canAccessVideo\",\r",
							"            \"showSessionRecordingSubscribed\",\r",
							"            \"showSessionRecordingSubscription\",\r",
							"            \"showTop5RequestedSession\",\r",
							"            \"inviteLoginJoinThirdParty\",\r",
							"            \"inviteLoginSessionRecordingSubscription\",\r",
							"            \"inviteLoginAcceptSession\",\r",
							"            \"showJoinThirdPartySession\",\r",
							"            \"showLoggedInAsEducatorToAccept\",\r",
							"            \"showAcceptSession\",\r",
							"            \"showHashTagMessage\",\r",
							"            \"lessonCollection\",\r",
							"            \"isPresenterAndBlocked\",\r",
							"            \"isHigherEdStudent\",\r",
							"            \"canAcceptOrDeclinePendingSession\",\r",
							"            \"alreadyExpressedInterest\"\r",
							"          ]\r",
							"        },\r",
							"        \"expertSuggested\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"canPresentAsPerVerificationStatus\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"presenterVerificationStatus\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"verificationRequired\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"favoriteSession\": {\r",
							"          \"type\": \"boolean\"\r",
							"        },\r",
							"        \"careerClusters\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": {}\r",
							"        },\r",
							"        \"requesterDetail\": {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"participantAuthId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"displayName\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"email\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"profileImageUrl\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"companyId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"schoolName\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"schoolId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"sessionParticipantType\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"averageRating\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"participantAuthId\",\r",
							"            \"displayName\",\r",
							"            \"email\",\r",
							"            \"profileImageUrl\",\r",
							"            \"companyId\",\r",
							"            \"schoolName\",\r",
							"            \"schoolId\",\r",
							"            \"sessionParticipantType\",\r",
							"            \"averageRating\"\r",
							"          ]\r",
							"        },\r",
							"        \"inviteeCount\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"videoAvailable\": {\r",
							"          \"type\": \"boolean\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"topic\",\r",
							"        \"subjects\",\r",
							"        \"grades\",\r",
							"        \"description\",\r",
							"        \"outcomes\",\r",
							"        \"questions\",\r",
							"        \"industries\",\r",
							"        \"skills\",\r",
							"        \"companies\",\r",
							"        \"studentCount\",\r",
							"        \"dates\",\r",
							"        \"duration\",\r",
							"        \"draft\",\r",
							"        \"allowThirdParty\",\r",
							"        \"sessionId\",\r",
							"        \"presenterId\",\r",
							"        \"presenter\",\r",
							"        \"requesterId\",\r",
							"        \"classIds\",\r",
							"        \"status\",\r",
							"        \"sessionType\",\r",
							"        \"educatorClass\",\r",
							"        \"recordingConsent\",\r",
							"        \"followingSession\",\r",
							"        \"accessLevel\",\r",
							"        \"expertSuggested\",\r",
							"        \"canPresentAsPerVerificationStatus\",\r",
							"        \"presenterVerificationStatus\",\r",
							"        \"verificationRequired\",\r",
							"        \"favoriteSession\",\r",
							"        \"careerClusters\",\r",
							"        \"requesterDetail\",\r",
							"        \"inviteeCount\",\r",
							"        \"videoAvailable\"\r",
							"      ]\r",
							"    },\r",
							"    \"status\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"statusCode\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"sessionDetail\",\r",
							"    \"status\",\r",
							"    \"statusCode\"\r",
							"  ]\r",
							"}\r",
							"pm.variables.set(\"schema\", schema)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let Response = pm.response.json();\r",
							"console.log(Response)\r",
							"\r",
							"pm.test(\"Veirfy the length of the properties\", function () {\r",
							"    pm.expect(Object.keys(Response).length).to.eql(3)\r",
							"})\r",
							"\r",
							"pm.test(\"Verify if sessionId in preseter session\", function() {\r",
							"   pm.expect(Response.sessionDetail.sessionId).to.eql(pm.environment.get(\"TRSessionId\"))\r",
							"});\r",
							"\r",
							"pm.test('Verify the status of the session', function(){\r",
							"    pm.expect(Response.sessionDetail.status).to.eql(\"Requested\")\r",
							"})\r",
							"\r",
							"pm.test('Verify the value of requester ID', function(){\r",
							"    let reuesterID = pm.environment.get(\"educator_UserAuthId\")\r",
							"    pm.expect(Response.sessionDetail.requesterId).to.eql(reuesterID)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate schema\", () => {\r",
							"    pm.response.to.have.jsonSchema(pm.variables.get(\"schema\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"sessionId\":{{TRSessionId}},\r\n    \"userAuthId\":{{presenter_UserAuthId}}\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/SessionDetailRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"SessionDetailRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "05.Verify presenterId of the session is same as the signed up presenter",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// pm.request.headers.clear();\r",
							"\r",
							"// var loginRequest = {\r",
							"//     UserName: pm.environment.get('presenter_username'),\r",
							"//     Password: pm.environment.get('presenter_password'),\r",
							"//     redirect: \"v5\",\r",
							"//     AppName: \"v5\",\r",
							"//     SubDomain: \"v3\",\r",
							"//     ReturnUrl: \"/app/events/my\"\r",
							"// }\r",
							"\r",
							"// var loginRequestForm = [\r",
							"//     {key: \"UserName\", value: pm.environment.get('presenter_username')},\r",
							"//     {key: \"Password\", value: pm.environment.get('presenter_password')},\r",
							"//     {key: \"redirect\", value: \"v5\"},\r",
							"//     {key: \"AppName\", value: \"v5-qa4\"},\r",
							"//     {key: \"SubDomain\", value: \"qa4\"},\r",
							"//     {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"//     {key: \"RememberMe\", value: \"false\"}\r",
							"// ];\r",
							"\r",
							"// pm.sendRequest({\r",
							"//     url: pm.environment.get('idProviderUrl'),\r",
							"//     method: 'POST',\r",
							"//     header: {\r",
							"//         'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"//         'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"//         'Host': 'idtest.nepris.com',\r",
							"//         'Origin': 'https://idtest.nepris.com',\r",
							"//         'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"//     },\r",
							"//     body: {\r",
							"//         /*mode: \"raw\",\r",
							"//         raw: JSON.stringify(loginRequest),*/\r",
							"//         mode: \"formdata\",\r",
							"//         formdata: loginRequestForm\r",
							"//     }\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let Response = pm.response.json();\r",
							"console.log(Response)\r",
							"\r",
							"pm.test(\"Veirfy the length of the properties\", function () {\r",
							"    pm.expect(Object.keys(Response).length).to.eql(3)\r",
							"})\r",
							"\r",
							"pm.test('Verify if sessionId is equal to ' + pm.environment.get('TRSessionId'), function() {\r",
							"    pm.expect(Response.sessionDetail.sessionId).equals(pm.environment.get('TRSessionId'));\r",
							"});\r",
							"\r",
							"pm.test('Verify if presenterId is equal to ' + pm.environment.get('presenter_UserAuthId'), function() {\r",
							"    pm.expect(Response.sessionDetail.presenter.userAuthId).equals(pm.environment.get('presenter_UserAuthId'));\r",
							"});\r",
							"\r",
							"pm.test('Verify if inviteAcceptSession is false now', function () {\r",
							"    pm.expect(Response.sessionDetail.accessLevel.inviteAcceptSession).to.be.true;\r",
							"});\r",
							"\r",
							"// pm.test('Verify session participation message', function () {\r",
							"//     pm.expect(JSON.stringify(Response.sessionDetail.accessLevel.sessionParticipationMessage)).equals('\"You are the presenter of this session.\"');\r",
							"// });\r",
							"\r",
							"pm.test('Verify if userPartOfTheSession is true', function () {\r",
							"    pm.expect(Response.sessionDetail.accessLevel.userPartOfTheSession).to.be.false;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"sessionId\":{{TRSessionId}},\r\n    \"userAuthId\":{{presenter_UserAuthId}}\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/SessionDetailRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"SessionDetailRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "06.Educator Signing up as participant of the session",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('participant1_username'),\r",
							"    Password: pm.environment.get('participant1_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('participant1_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('participant1_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let Response = pm.response.json();\r",
							"console.log(Response)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Verify if sessionId is equal to ' + pm.environment.get('TRSessionId'), function() {\r",
							"    pm.expect(Response.sessionDetail.sessionId).equals(pm.environment.get('TRSessionId'));\r",
							"});\r",
							"\r",
							"if(jsonData.sessionDetail.accessLevel.inviteJoinThirdParty) {\r",
							"        var domain = pm.environment.get('Domain');\r",
							"        var path = pm.environment.get('path');\r",
							"        const postRequest = {\r",
							"        url: domain+'/'+path+'/'+'AddParticipantRequest',\r",
							"        method: 'POST',\r",
							"        header: {\r",
							"            'Content-Type': 'application/json',\r",
							"            'Accept': '*/*'\r",
							"        },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify(\r",
							"                {\r",
							"                    'classCount': 30,\r",
							"                    'classIds': [],\r",
							"                    'phoneNumber': 9876543212,\r",
							"                    'requesterId': pm.environment.get('participant1_UserAuthId'),\r",
							"                    'sessionId': pm.environment.get('TRSessionId')\r",
							"                })\r",
							"        }\r",
							"        };\r",
							"        pm.sendRequest(postRequest, (error, response) => {\r",
							"            if (error) {\r",
							"                console.log(error);\r",
							"            }\r",
							"        \r",
							"        pm.test('Participant added successfully', () => {\r",
							"            pm.expect(error).to.equal(null);\r",
							"            pm.expect(response).to.have.property('code', 200);\r",
							"            pm.expect(response).to.have.property('status', 'OK');\r",
							"            pm.expect(response.json().saved).to.be.true;\r",
							"        });\r",
							"    });\r",
							"}\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"sessionId\":{{TRSessionId}},\r\n    \"userAuthId\":{{participant1_UserAuthId}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/SessionDetailRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"SessionDetailRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "07.Verify if new participant's name appears in Invitees list",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('participant1_username'),\r",
							"    Password: pm.environment.get('participant1_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('participant1_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('participant1_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let Response = pm.response.json();\r",
							"console.log(Response)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// var jsonData = pm.response.json();\r",
							"pm.environment.set('TRS_AccessCode', Response.sessionDetail.sessionAccessCode);\r",
							"\r",
							"\r",
							"//We don't find inventee lists in this service\r",
							"// pm.test(\"Participant's name should be present in Invitees list\", function () {\r",
							"//     var length = Response.sessionDetail.inviteeDetail.length;\r",
							"//     var userAuthId = JSON.stringify(jsonData.sessionDetail.inviteeDetail[length - 1].participantAuthId).replace(/['\"]+/g, '');\r",
							"//     pm.expect(userAuthId).equals(pm.environment.get('participant1_UserAuthId'));\r",
							"// });\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"sessionId\":{{TRSessionId}},\r\n    \"userAuthId\":{{participant1_UserAuthId}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/SessionDetailRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"SessionDetailRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "08.Student signing up to TRS using session access code",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('stu13Plus_username'),\r",
							"    Password: pm.environment.get('stu13Plus_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('stu13Plus_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('stu13Plus_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let Response = pm.response.json();\r",
							"console.log(Response)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Verify if sessionId is equal to ' + pm.environment.get('TRSessionId'), function() {\r",
							"    pm.expect(Response.sessionDetail.sessionId).equals(pm.environment.get('TRSessionId'));\r",
							"});\r",
							"\r",
							"if(jsonData.sessionDetail.accessLevel.showStudentSessionCode) {\r",
							"        var domain = pm.environment.get('Domain');\r",
							"        var path = pm.environment.get('path');\r",
							"        var sessioncode = pm.environment.get('TRS_AccessCode').replace(/['\"]+/g, '');\r",
							"        const postRequest = {\r",
							"        url: domain+'/'+path+'/'+'AddStudentToSessionRequest',\r",
							"        method: 'POST',\r",
							"        header: {\r",
							"            'Content-Type': 'application/json',\r",
							"            'Accept': '*/*'\r",
							"        },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify(\r",
							"                {\r",
							"                    'accessCode': sessioncode,\r",
							"                    'sessionId': pm.environment.get('TRSessionId'),\r",
							"                    'studentId': pm.environment.get('stu13Plus_UserAuthId')\r",
							"                })\r",
							"        }\r",
							"        };\r",
							"        pm.sendRequest(postRequest, (error, response) => {\r",
							"            if (error) {\r",
							"                console.log(error);\r",
							"            }\r",
							"        \r",
							"            pm.test('Participant added successfully', () => {\r",
							"                pm.expect(error).to.equal(null);\r",
							"                pm.expect(response).to.have.property('code', 200);\r",
							"                pm.expect(response).to.have.property('status', 'OK');\r",
							"                pm.expect(response.json().saved).to.be.true;\r",
							"            });\r",
							"        }\r",
							"    );\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"sessionId\":{{TRSessionId}},\r\n    \"userAuthId\":{{stu13Plus_UserAuthId}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/SessionDetailRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"SessionDetailRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "09.As Professional create an Industry Chat",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('presenter_username'),\r",
							"    Password: pm.environment.get('presenter_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('presenter_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('presenter_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set('IC_SessionId', JSON.stringify(jsonData.id).replace(/['\"]+/g, ''));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"userAuthId\": {{presenter_UserAuthId}},\r\n\t\"topic\": \"IC_Testing from Postman {{randomID}}\",\r\n\t\"grades\": [\r\n\t\t\"Grade9To12\",\r\n\t\t\"Grade2\",\r\n\t\t\"Grade1\"\r\n\t],\r\n\t\"description\": \"<span id=\\\"docs-internal-guid-804d6f0b-7fff-3914-dacb-db72d11cca82\\\" style=\\\"font-family:-webkit-standard;\\\"><span id=\\\"docs-internal-guid-ceae3eb6-7fff-f4ae-f671-134278a72c35\\\"><p dir=\\\"ltr\\\" style=\\\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\\\"><span style=\\\"font-size:11pt;font-family:Arial;font-weight:700;font-variant-ligatures:normal;font-variant-east-asian:normal;font-variant-position:normal;vertical-align:baseline;white-space:pre-wrap;\\\">Materials needed for this activity include</span><span style=\\\"font-size:11pt;font-family:Arial;font-variant-ligatures:normal;font-variant-east-asian:normal;font-variant-position:normal;vertical-align:baseline;white-space:pre-wrap;\\\">: __________________________</span></p><p dir=\\\"ltr\\\" style=\\\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\\\"></p><p dir=\\\"ltr\\\" style=\\\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\\\"></p><p dir=\\\"ltr\\\" style=\\\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\\\"><span style=\\\"font-size:11pt;font-family:Arial;font-variant-ligatures:normal;font-variant-east-asian:normal;font-variant-position:normal;vertical-align:baseline;white-space:pre-wrap;\\\">Follow along as I create a _________! We&rsquo;ll go through each step together so that students get the hands-on experience of _________ and learn about careers as a _________.&nbsp; We&rsquo;ll also talk about the _________ field so they can consider if it might be of interest for their futures.&nbsp;</span></p></span><p dir=\\\"ltr\\\" style=\\\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\\\"><br /></p></span>\",\r\n\t\"outcomes\": \"<span id=\\\"docs-internal-guid-14248a0b-7fff-e0be-519b-f122b3ac328a\\\" style=\\\"font-family:-webkit-standard;\\\"><span style=\\\"font-size:11pt;font-family:Arial;font-variant-ligatures:normal;font-variant-east-asian:normal;font-variant-position:normal;vertical-align:baseline;white-space:pre-wrap;\\\"></span></span><span id=\\\"docs-internal-guid-2f7d2fa9-7fff-96e1-026c-7e5c118ac2f0\\\"><p dir=\\\"ltr\\\" style=\\\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\\\"><span style=\\\"font-size:11pt;font-family:Arial;font-variant-ligatures:normal;font-variant-east-asian:normal;font-variant-position:normal;vertical-align:baseline;white-space:pre-wrap;\\\">Students will learn how to _________. By completing this activity, they&rsquo;ll also find out about the work that goes into being a _________, why it&rsquo;s a _________ career, and what a typical day can look like in this field.</span></p></span>\",\r\n\t\"questions\": \"<span id=\\\"docs-internal-guid-3c973309-7fff-c6ae-83c8-726ece6f172f\\\" style=\\\"font-size:14.666666984558105px;white-space:pre-wrap;\\\"><div><span id=\\\"docs-internal-guid-af7b9ff7-7fff-dff7-9994-0843f81f5e4d\\\"><ul style=\\\"margin-top:0px;margin-bottom:0px;\\\"><li dir=\\\"ltr\\\" style=\\\"list-style-type:disc;font-size:11pt;font-family:Arial;font-variant-ligatures:normal;font-variant-east-asian:normal;font-variant-position:normal;vertical-align:baseline;white-space:pre;\\\"><p dir=\\\"ltr\\\" role=\\\"presentation\\\" style=\\\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\\\"><span style=\\\"font-size:11pt;font-variant-ligatures:normal;font-variant-east-asian:normal;font-variant-position:normal;vertical-align:baseline;white-space:pre-wrap;\\\">How do you _________?</span></p></li><li dir=\\\"ltr\\\" style=\\\"list-style-type:disc;font-size:11pt;font-family:Arial;font-variant-ligatures:normal;font-variant-east-asian:normal;font-variant-position:normal;vertical-align:baseline;white-space:pre;\\\"><p dir=\\\"ltr\\\" role=\\\"presentation\\\" style=\\\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\\\"><span style=\\\"font-size:11pt;font-variant-ligatures:normal;font-variant-east-asian:normal;font-variant-position:normal;vertical-align:baseline;white-space:pre-wrap;\\\">What is it like to work in the _________ industry?</span></p></li><li dir=\\\"ltr\\\" style=\\\"list-style-type:disc;font-size:11pt;font-family:Arial;font-variant-ligatures:normal;font-variant-east-asian:normal;font-variant-position:normal;vertical-align:baseline;white-space:pre;\\\"><p dir=\\\"ltr\\\" role=\\\"presentation\\\" style=\\\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\\\"><span style=\\\"font-size:11pt;font-variant-ligatures:normal;font-variant-east-asian:normal;font-variant-position:normal;vertical-align:baseline;white-space:pre-wrap;\\\">What education and skills are needed to be a _________?</span></p></li><li dir=\\\"ltr\\\" style=\\\"list-style-type:disc;font-size:11pt;font-family:Arial;font-variant-ligatures:normal;font-variant-east-asian:normal;font-variant-position:normal;vertical-align:baseline;white-space:pre;\\\"><p dir=\\\"ltr\\\" role=\\\"presentation\\\" style=\\\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\\\"><span style=\\\"font-size:11pt;font-variant-ligatures:normal;font-variant-east-asian:normal;font-variant-position:normal;vertical-align:baseline;white-space:pre-wrap;\\\">How is creating _________ connected to what students may be learning now?</span></p></li></ul></span><span style=\\\"font-face:Arial;\\\"><br /></span></div></span>\",\r\n\t\"date\": {{timestampUtcIso8601more}},\r\n\t\"duration\": 30,\r\n\t\"notes\": \"testing\",\r\n\t\"draft\": false,\r\n\t\"presenterId\": {{presenter_UserAuthId}},\r\n\t\"consent\": true,\r\n\t\"verificationRequired\": true,\r\n\t\"careerClusterIds\": []\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/CreateIndustryChatRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"CreateIndustryChatRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "10.Verify if the IC appears in the presenter's confirmed sessions list",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('presenter_username'),\r",
							"    Password: pm.environment.get('presenter_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('presenter_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('presenter_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"limit\":12,\r\n    \"offset\":0,\r\n    \"userAuthId\":{{presenter_UserAuthId}},\r\n    \"isPending\":false,\r\n    \"status\":[\"Confirmed\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/GetMySessionRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"GetMySessionRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "11.Verify that third party is not invited to join the session at this point",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Verify if inviteJoinThirdParty is false now', function () {\r",
							"    pm.expect(jsonData.sessionDetail.accessLevel.inviteJoinThirdParty).to.be.false;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"sessionId\":{{IC_SessionId}},\r\n    \"userAuthId\":{{educator_UserAuthId}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/SessionDetailRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"SessionDetailRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "12.Get all videos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Verify if videos count > 0 and less then or equal to 50 ', function () {\r",
							"    pm.expect(jsonData.videoResponse.videos.length).greaterThan(0);\r",
							"    pm.expect(jsonData.videoResponse.videos.length).lessThan(51);\r",
							"});\r",
							"\r",
							"pm.test('Verify if Facets count = 4 ', function () {\r",
							"    pm.expect(jsonData.videoResponse.facets.length).equals(4);\r",
							"});\r",
							"\r",
							"var videosCount = JSON.stringify(jsonData.videoResponse.facets[0].values[0].count);\r",
							"var videoFilterKey = JSON.stringify(jsonData.videoResponse.facets[0].name);\r",
							"var videoFilterValue = JSON.stringify(jsonData.videoResponse.facets[0].values[0].name);\r",
							"pm.environment.set('VideosCount', videosCount);\r",
							"pm.environment.set('VideoFilterKey', videoFilterKey);\r",
							"pm.environment.set('VideoFilterValue', videoFilterValue);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"keyword\":\"\",\r\n    \"limit\":50,\r\n    \"offset\":0,\r\n    \"filters\":[]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/SearchVideosRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"SearchVideosRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "13.Get videos by setting filter and verify the count",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test('Verify if fetched videos count > 0 and <= 50 ', function () {\r",
							"    pm.expect(jsonData.videoResponse.videos.length).greaterThan(0);\r",
							"    pm.expect(jsonData.videoResponse.videos.length).lessThan(51);\r",
							"});\r",
							"\r",
							"pm.test('Verify if Facets count = 4 ', function () {\r",
							"    pm.expect(jsonData.videoResponse.facets.length).equals(4);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the Videos total count = \" + pm.environment.get('VideosCount'), function(){\r",
							"    var TotalCount = JSON.stringify(jsonData.videoResponse.totalCount)\r",
							"    pm.expect(TotalCount).equals(pm.environment.get('VideosCount'));\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"keyword\":\"\",\r\n    \"limit\":50,\r\n    \"offset\":0,\r\n    \"filters\":[\r\n        {\"key\":{{VideoFilterKey}},\r\n        \"value\":{{VideoFilterValue}}}\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/SearchVideosRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"SearchVideosRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "14.Get all public playlists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Verify if fetched videos count > 0', function () {\r",
							"    pm.expect(jsonData.publicPlaylistDtos.length).greaterThan(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Domain}}/{{path}}/GetPublicPlayListRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"GetPublicPlayListRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "15.Get Video details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Verify that video is as expected\", function() {\r",
							"    var title = JSON.stringify(jsonData.videoDetailDto.title).replace(/['\"]+/g, '');\r",
							"    pm.expect(title).equals('The Life of a Professional Musician');\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that canCopySession is false\", function() {\r",
							"    pm.expect(jsonData.videoDetailDto.canCopySession).to.be.false;\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if videoHost is Vimeo\", function() {\r",
							"    pm.expect(JSON.stringify(jsonData.videoDetailDto.videoHost).replace(/['\"]+/g, '')).equals('Vimeo');\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"videoId\":67994,\r\n    \"videoType\":\"SessionVideo\",\r\n    \"userAuthId\":{{educator_UserAuthId}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/GetVideoDetailRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"GetVideoDetailRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "16.Bookmark  video",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var domain = pm.environment.get('Domain');\r",
							"var path = pm.environment.get('path');\r",
							"const postRequest = {\r",
							"url: domain+'/'+path+'/'+'AddVideoToBookMarkRequest',\r",
							"        method: 'POST',\r",
							"        header: {\r",
							"            'Content-Type': 'application/json',\r",
							"            'Accept': '*/*'\r",
							"        },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify(\r",
							"                {\r",
							"                    \"userAuthId\":pm.environment.get('educator_UserAuthId'),\r",
							"                    \"videoId\":67994,\r",
							"                    \"videoType\":\"SessionVideo\"\r",
							"})\r",
							"        }\r",
							"        };\r",
							"        pm.sendRequest(postRequest, (error, response) => {\r",
							"            if (error) {\r",
							"                console.log(error);\r",
							"            }\r",
							"        \r",
							"        pm.test('When tried to Bookmark same video, verify if response message says that the video is already bookmarked', () => {\r",
							"            var jsonresponse = response.json();\r",
							"            pm.expect(error).to.equal(null);\r",
							"            pm.expect(response).to.have.property('code', 200);\r",
							"            pm.expect(JSON.stringify(jsonresponse.status).replace(/['\"]+/g, '')).equals('Warning');\r",
							"            pm.expect(JSON.stringify(jsonresponse.message).replace(/['\"]+/g, '')).equals('Video already bookmarked!');\r",
							"        });\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userAuthId\":{{educator_UserAuthId}},\r\n    \"videoId\":67994,\r\n    \"videoType\":\"SessionVideo\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/AddVideoToBookMarkRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"AddVideoToBookMarkRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "17.Verify that bookmarked video is fetched when tried to fetch all the Bookmarked videos",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Verify if the bookmarked video is part of the response\", function() {\r",
							"    const vidID = \"67994\";\r",
							"    const vidTitle = \"The Life of a Professional Musician\";\r",
							"\r",
							"    var found = false;\r",
							"    for(var i=0;i<jsonData.videoResponse.videos.length;i++){\r",
							"        var videoId = JSON.stringify(jsonData.videoResponse.videos[i].videoId);\r",
							"        var videoTitle = JSON.stringify(jsonData.videoResponse.videos[i].title).replace(/['\"]+/g, '');\r",
							"\r",
							"        if (videoId == vidID) {\r",
							"            found = true;\r",
							"            pm.expect(videoTitle).equals(vidTitle);\r",
							"            break;\r",
							"        }\r",
							"    }\r",
							"    pm.expect(found).to.be.true;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"keyword\":\"\",\r\n    \"limit\":50,\r\n    \"offset\":0,\r\n    \"filters\":[]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/BookmarkedVideosRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"BookmarkedVideosRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "18.Remove a video from Bookmark",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var domain = pm.environment.get('Domain');\r",
							"var path = pm.environment.get('path');\r",
							"const postRequest = {\r",
							"url: domain+'/'+path+'/'+'RemoveVideoFromBookMarkRequest',\r",
							"        method: 'POST',\r",
							"        header: {\r",
							"            'Content-Type': 'application/json',\r",
							"            'Accept': '*/*'\r",
							"        },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify(\r",
							"                {\r",
							"                    \"userAuthId\":pm.environment.get('educator_UserAuthId'),\r",
							"                    \"videoId\":67994,\r",
							"                    \"videoType\":\"SessionVideo\"\r",
							"})\r",
							"        }\r",
							"        };\r",
							"        pm.sendRequest(postRequest, (error, response) => {\r",
							"            if (error) {\r",
							"                console.log(error);\r",
							"            }\r",
							"        \r",
							"        pm.test('When tried to remove bookmark on same video, verify if response message says that the video is not bookmarked', () => {\r",
							"            var jsonresponse = response.json();\r",
							"            pm.expect(error).to.equal(null);\r",
							"            pm.expect(response).to.have.property('code', 200);\r",
							"            pm.expect(JSON.stringify(jsonresponse.status).replace(/['\"]+/g, '')).equals('Warning');\r",
							"            pm.expect(JSON.stringify(jsonresponse.message).replace(/['\"]+/g, '')).equals('Video not bookmarked for user!');\r",
							"        });\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"videoId\":67994,\r\n    \"videoType\":\"SessionVideo\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/RemoveVideoFromBookMarkRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"RemoveVideoFromBookMarkRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "19.Create new Playlist",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// var randomID = Date.now();\r",
							"pm.environment.set(\"PlaylistName\", \"SmokePlaylist_\"+pm.environment.get('randomID'));\r",
							"\r",
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let Response = pm.response.json();\r",
							"console.log(Response)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var domain = pm.environment.get('Domain');\r",
							"var path = pm.environment.get('path');\r",
							"const postRequest = {\r",
							"url: domain+'/'+path+'/'+'GetPlayListRequest',\r",
							"        method: 'POST',\r",
							"        header: {\r",
							"            'Content-Type': 'application/json',\r",
							"            'Accept': '*/*'\r",
							"        },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify(\r",
							"                {\r",
							"                    \"videoId\":67431,\r",
							"                    \"videoType\":\"SessionVideo\"\r",
							"})\r",
							"        }\r",
							"        };\r",
							"        pm.sendRequest(postRequest, (error, response) => {\r",
							"            if (error) {\r",
							"                console.log(error);\r",
							"            }\r",
							"        \r",
							"        pm.test('Fetch all the playlists and Verify if newly created Playlist containing 0 video is fetched', () => {\r",
							"            var jsonresponse = response.json();\r",
							"            pm.expect(error).to.equal(null);\r",
							"            pm.expect(response).to.have.property('code', 200);\r",
							"\r",
							"            var len = jsonresponse.playListDtos.length;\r",
							"            var fetched_Name = JSON.stringify(jsonresponse.playListDtos[len-1].name).replace(/['\"]+/g, '');\r",
							"            pm.expect(fetched_Name).equals(pm.environment.get('PlaylistName'));\r",
							"            pm.expect(JSON.stringify(jsonresponse.playListDtos[len-1].videoCount).replace(/['\"]+/g, '')).equals('0');\r",
							"            var Id = JSON.stringify(jsonresponse.playListDtos[len-1].id).replace(/['\"]+/g, '');\r",
							"            pm.environment.set('PlaylistId', Id)\r",
							"        });\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{PlaylistName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/CreatePlayListRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"CreatePlayListRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "20.Add video to playlist",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var domain = pm.environment.get('Domain');\r",
							"var path = pm.environment.get('path');\r",
							"const postRequest = {\r",
							"url: domain+'/'+path+'/'+'GetPlayListRequest',\r",
							"        method: 'POST',\r",
							"        header: {\r",
							"            'Content-Type': 'application/json',\r",
							"            'Accept': '*/*'\r",
							"        },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify(\r",
							"                {\r",
							"                    \"videoId\":67431,\r",
							"                    \"videoType\":\"SessionVideo\"\r",
							"})\r",
							"        }\r",
							"        };\r",
							"        pm.sendRequest(postRequest, (error, response) => {\r",
							"            if (error) {\r",
							"                console.log(error);\r",
							"            }\r",
							"        \r",
							"        pm.test('Fetch all the playlists and Verify if newly created Playlist containing 1 video is fetched', () => {\r",
							"            var jsonresponse = response.json();\r",
							"            pm.expect(error).to.equal(null);\r",
							"            pm.expect(response).to.have.property('code', 200);\r",
							"\r",
							"            var len = jsonresponse.playListDtos.length;\r",
							"            pm.expect(JSON.stringify(jsonresponse.playListDtos[len-1].name).replace(/['\"]+/g, '')).equals(pm.environment.get('PlaylistName'));\r",
							"            pm.expect(JSON.stringify(jsonresponse.playListDtos[len-1].videoCount).replace(/['\"]+/g, '')).equals('1');\r",
							"        });\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"playListId\": {{PlaylistId}},\r\n    \"videoId\": 67431,\r\n    \"videoType\": \"SessionVideo\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/AddVideoToPlayListRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"AddVideoToPlayListRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "21.Get playlist detail aftering adding video",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Verify that video count = 1', function() {\r",
							"    pm.expect(JSON.stringify(jsonData.playListDto.id).replace(/['\"]+/g, '')).equals(pm.environment.get('PlaylistId'));\r",
							"    pm.expect(JSON.stringify(jsonData.playListDto.videoCount).replace(/['\"]+/g, '')).equals('1');\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"playListId\": {{PlaylistId}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/GetPlayListDetailRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"GetPlayListDetailRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "22.Remove video from Playlist",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"playListId\":{{PlaylistId}},\r\n    \"videoId\":67431,\r\n    \"videoType\":\"SessionVideo\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/RemoveVideoFromPlayListRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"RemoveVideoFromPlayListRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "23.Get playlist detail after removing the video",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Verify that video count = 0', function() {\r",
							"    pm.expect(JSON.stringify(jsonData.playListDto.id).replace(/['\"]+/g, '')).equals(pm.environment.get('PlaylistId'));\r",
							"    pm.expect(JSON.stringify(jsonData.playListDto.videoCount).replace(/['\"]+/g, '')).equals('0');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"playListId\": {{PlaylistId}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/GetPlayListDetailRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"GetPlayListDetailRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "24.Browse Request Templates",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var SessionTemplates = pm.response.json().sessionTemplateDto.miniTopicBos;\r",
							"pm.test('Session Templates count should be greater than 0', function () {\r",
							"    pm.expect(SessionTemplates.length).to.be.greaterThan(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userAuthId\": {{educator_UserAuthId}},\r\n    \"keyword\": \"\",\r\n    \"limit\": 20,\r\n    \"offset\": 0,\r\n    \"filters\": []\r\n}"
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/SessionTemplateRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"SessionTemplateRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "25.Session Collections",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Session Collections count should be greater than 0', function () {\r",
							"    pm.expect(jsonData.sessionCollection.lessonCollections.length).to.be.greaterThan(0);\r",
							"});\r",
							"\r",
							"pm.test('Verify that facets count is 2', function() {\r",
							"    pm.expect(jsonData.facets.length).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userAuthId\": 237257\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/GetSessionCollectionRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"GetSessionCollectionRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "26.Session Calendar",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Session Calendar items count should be greater than 0', function () {\r",
							"    pm.expect(jsonData.calendarItems.sessionScheduledDates.length).to.be.greaterThan(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userAuthId\": {{educator_UserAuthId}},\r\n    \"filter\": \"All\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/GetSessionCalendarItemsRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"GetSessionCalendarItemsRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "27.Add Session to Favorites",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Verify if change is saved', function () {\r",
							"    pm.expect(jsonData.saved).to.be.true;\r",
							"});\r",
							"\r",
							"var domain = pm.environment.get('Domain');\r",
							"var path = pm.environment.get('path');\r",
							"const postRequest = {\r",
							"url: domain+'/'+path+'/'+'GetMyFavouriteSessionRequest',\r",
							"        method: 'POST',\r",
							"        header: {\r",
							"            'Content-Type': 'application/json',\r",
							"            'Accept': '*/*'\r",
							"        },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify(\r",
							"                {\r",
							"                    \"offset\":0,\r",
							"                    \"limit\":20\r",
							"})\r",
							"        }\r",
							"        };\r",
							"        pm.sendRequest(postRequest, (error, response) => {\r",
							"            if (error) {\r",
							"                console.log(error);\r",
							"            }\r",
							"        \r",
							"        pm.test('Fetch my favorite templates and verify if newly added video is fetched', () => {\r",
							"            var jsonresponse = response.json();\r",
							"            pm.expect(error).to.equal(null);\r",
							"            pm.expect(response).to.have.property('code', 200);\r",
							"\r",
							"            var id = JSON.stringify(jsonresponse.myFavouriteSession.sessionDtos[0].id);\r",
							"            pm.expect(id).to.eql('75613');\r",
							"            \r",
							"        });\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"sessionId\":75613,\r\n    \"userAuthId\":{{educator_UserAuthId}},\r\n    \"removeIt\":false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/AddRemoveFromFavouriteRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"AddRemoveFromFavouriteRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "28.Remove session from Favorite templates",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Verify if change is saved', function () {\r",
							"    pm.expect(jsonData.saved).to.be.true;\r",
							"});\r",
							"\r",
							"var domain = pm.environment.get('Domain');\r",
							"var path = pm.environment.get('path');\r",
							"const postRequest = {\r",
							"url: domain+'/'+path+'/'+'GetMyFavouriteSessionRequest',\r",
							"        method: 'POST',\r",
							"        header: {\r",
							"            'Content-Type': 'application/json',\r",
							"            'Accept': '*/*'\r",
							"        },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify(\r",
							"                {\r",
							"                    \"offset\":0,\r",
							"                    \"limit\":20\r",
							"})\r",
							"        }\r",
							"        };\r",
							"        pm.sendRequest(postRequest, (error, response) => {\r",
							"            if (error) {\r",
							"                console.log(error);\r",
							"            }\r",
							"        \r",
							"        pm.test('Fetch my favorite templates and verify if removed session doesnt appear in the list', () => {\r",
							"            var jsonresponse = response.json();\r",
							"            pm.expect(error).to.equal(null);\r",
							"            pm.expect(response).to.have.property('code', 200);\r",
							"\r",
							"            var id = JSON.stringify(jsonresponse.myFavouriteSession.sessionDtos[0].id);\r",
							"            pm.expect(id).to.not.eql('75613');\r",
							"            \r",
							"        });\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"sessionId\":75613,\r\n    \"userAuthId\":{{educator_UserAuthId}},\r\n    \"removeIt\":true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/AddRemoveFromFavouriteRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"AddRemoveFromFavouriteRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "29.Career Explorer - GetCareerIndustries",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Verify that Industries count is greater than 0\", function () {\r",
							"    pm.expect(jsonData.industryListResult.industries.length).greaterThan(0);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Domain}}/{{path}}/GetCareerIndustriesRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"GetCareerIndustriesRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "30.Career Explorer - GetCareerClusters",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Verify that Industries count is greater than 0\", function () {\r",
							"    pm.expect(jsonData.careerClusterListResult.careerClusters.length).greaterThan(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Domain}}/{{path}}/GetCareerClustersRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"GetCareerClustersRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "31.Search career with keyword",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Verify search result keyword\", function() {\r",
							"    pm.expect(JSON.stringify(jsonData.searchResult.keyword).replace(/['\"]+/g, '')).equals('Engineer');\r",
							"});\r",
							"\r",
							"pm.test(\"Verify search result link\", function() {\r",
							"    pm.expect(JSON.stringify(jsonData.searchResult.link[0].href)).to.contain('https://services.onetcenter.org');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"keyword\":\"Engineer\",\r\n    \"start\":0,\r\n    \"pageSize\":10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/SearchCareersRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"SearchCareersRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "32.Add Career to Favorites",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var domain = pm.environment.get('Domain');\r",
							"var path = pm.environment.get('path');\r",
							"const postRequest = {\r",
							"url: domain+'/'+path+'/'+'GetFavoriteCareersRequest',\r",
							"        method: 'POST',\r",
							"        header: {\r",
							"            'Accept': '*/*'\r",
							"        },\r",
							"        };\r",
							"        pm.sendRequest(postRequest, (error, response) => {\r",
							"            if (error) {\r",
							"                console.log(error);\r",
							"            }\r",
							"        \r",
							"        pm.test('Fetch my favorite careers and verify if added career appears in the list', () => {\r",
							"            var jsonresponse = response.json();\r",
							"            pm.expect(error).to.equal(null);\r",
							"            pm.expect(response).to.have.property('code', 200);\r",
							"\r",
							"            var len = jsonresponse.favoriteCareers.length;\r",
							"\r",
							"            found = false;\r",
							"            for(var i=0;i<len;i++){\r",
							"                var careerId = JSON.stringify(jsonresponse.favoriteCareers[i].oNetCareerCode).replace(/['\"]+/g, '');\r",
							"\r",
							"                if (careerId == '29-2091.00') {\r",
							"                    found = true;\r",
							"                    break;\r",
							"                }\r",
							"            }\r",
							"            pm.expect(found).to.be.true;\r",
							"            \r",
							"        });\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"careerCode\":\"29-2091.00\",\r\n    \"careerTitle\":\"Orthotists & Prosthetists\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/AddToFavoriteCareersRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"AddToFavoriteCareersRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "33.Remove Career from Favorites",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var domain = pm.environment.get('Domain');\r",
							"var path = pm.environment.get('path');\r",
							"const postRequest = {\r",
							"url: domain+'/'+path+'/'+'GetFavoriteCareersRequest',\r",
							"        method: 'POST',\r",
							"        header: {\r",
							"            'Content-Type': 'application/json',\r",
							"            'Accept': '*/*'\r",
							"        },\r",
							"        };\r",
							"        pm.sendRequest(postRequest, (error, response) => {\r",
							"            if (error) {\r",
							"                console.log(error);\r",
							"            }\r",
							"        \r",
							"        pm.test('Fetch my favorite careers and verify if removed career does not appears in the list', () => {\r",
							"            var jsonresponse = response.json();\r",
							"            pm.expect(error).to.equal(null);\r",
							"            pm.expect(response).to.have.property('code', 200);\r",
							"\r",
							"            var len = jsonresponse.favoriteCareers.length;\r",
							"\r",
							"            found = false;\r",
							"            for(var i=0;i<len;i++){\r",
							"                var careerId = JSON.stringify(jsonresponse.favoriteCareers[i].oNetCareerCode).replace(/['\"]+/g, '');\r",
							"\r",
							"                if (careerId == '29-2091.00') {\r",
							"                    found = true;\r",
							"                    break;\r",
							"                }\r",
							"            }\r",
							"            pm.expect(found).to.be.false;\r",
							"            \r",
							"        });\r",
							"    });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"careerCode\":\"29-2091.00\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/RemoveFromFavoriteCareersRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"RemoveFromFavoriteCareersRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "34.Search Users",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/dashboard\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('Verify if all the fetched users are Educators', function() {\r",
							"\r",
							"    var onlyGiverFound = false;\r",
							"\r",
							"    var len = jsonData.userSearchResponse.users.length;\r",
							"    var users = jsonData.userSearchResponse.users;\r",
							"    for (var i=0;i<len;i++) {\r",
							"        if (JSON.stringify(users[i].isTaker).replace(/['\"]+/g, '') == 'false'){\r",
							"            onlyGiverFound = true;\r",
							"            break;\r",
							"        }\r",
							"    }\r",
							"    pm.expect(onlyGiverFound).to.be.false;\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"keyword\":\"\",\r\n    \"limit\":50,\r\n    \"offset\":0,\r\n    \"filters\":[\r\n        {\r\n            \"key\":\"roles\",\r\n            \"value\":\"educator\"\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/SearchUsersRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"SearchUsersRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "35.Create Event in Draft status",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"}, function (err, res) {\r",
							"    console.log(\"Logged in through ID provider\");\r",
							"\r",
							"    pm.sendRequest({\r",
							"        url: pm.environment.get('userSessionAPIUrl'),\r",
							"        method: 'POST',\r",
							"        body: {\r",
							"            mode: \"raw\",\r",
							"            raw: \"\"\r",
							"        }\r",
							"    }, function (err, res) {\r",
							"        var sessionData = res.json();\r",
							"\r",
							"        if(sessionData){\r",
							"            var authToken = JSON.stringify(sessionData.authToken).replace(/['\"]+/g, '');\r",
							"            pm.environment.set(\"userAuthToken\", authToken);\r",
							"            console.log(\"token is\", authToken);\r",
							"        }\r",
							"    });\r",
							"});\r",
							"const moment = require('moment');\r",
							"// pm.variables.set(\"randomID\", Date.now());\r",
							"// pm.environment.set(\"randomID\", Date.now());\r",
							"\r",
							"var randomSeatCount = _.random(5, 500);\r",
							"// pm.variables.set(\"randomSeatCount\", randomSeatCount)\r",
							"pm.environment.set(\"randomSeatCount\", randomSeatCount)\r",
							"var randomStartDate = moment().add(_.random(15, 30), \"days\").format(\"YYYY-MM-DD\");\r",
							"// pm.variables.set(\"randomStartDate\", randomStartDate)\r",
							"pm.environment.set(\"randomStartDate\", randomStartDate);\r",
							"var randomEndDate = moment().add(_.random(30, 50), \"days\").format(\"YYYY-MM-DD\");\r",
							"// pm.variables.set(\"randomEndDate\", randomEndDate)\r",
							"pm.environment.set(\"randomEndDate\", randomEndDate);\r",
							"var randomRegistrationDeadline = moment().add(_.random(-15, 15), \"days\").format(\"YYYY-MM-DD\");\r",
							"// pm.variables.set(\"randomRegistrationDeadline\", randomRegistrationDeadline)\t\r",
							"pm.environment.set(\"randomRegistrationDeadline\", randomRegistrationDeadline);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let Response = pm.response.json();\r",
							"console.log(Response)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Get the URL Event ID from the URL\", function () {\r",
							"    //  var jsonData = pm.response.json();\r",
							"    // const eventId = Response.url.substring(Response.url.lastIndexOf(\"/\") + 1, jsonData.url.length);\r",
							"    const Id = Response.url.split('/')\r",
							"    const eventId = Id[4] \r",
							"    console.log(Id[4])\r",
							"    pm.environment.set(\"eventId\",eventId)\r",
							"    // pm.environment.set()\r",
							"    //pm.globals.set(\"lastCreatedEventId\", eventId);\r",
							"    //pm.globals.set(\"lastCreatedEvent\", JSON.stringify(jsonData));\r",
							"});\r",
							"\r",
							"pm.test(\"Contains the correct data\", function () {\r",
							"    var randomID = pm.environment.get(\"randomID\");\r",
							"    var randomSeatCount = pm.environment.get(\"randomSeatCount\");\r",
							"    var randomStartDate = pm.environment.get(\"randomStartDate\");\r",
							"    var randomEndDate = pm.environment.get(\"randomEndDate\");\r",
							"    var randomRegistrationDeadline = pm.environment.get(\"randomRegistrationDeadline\");\r",
							"\r",
							"    // var jsonData = pm.response.json();\r",
							"    pm.expect(Response.title).to.contain(randomID);\r",
							"    pm.expect(Response.summary).to.eql(\"abc\");\r",
							"    pm.expect(Response.description).to.eql(\"abc\");\r",
							"    pm.expect(Response.seatCount).to.eql(randomSeatCount);\r",
							"    // pm.expect(moment().utc(Response.startDate).format(\"YYYY-MM-DD\")).to.eql(randomStartDate);\r",
							"    const starD = Response.startDate.split('T')\r",
							"    pm.expect(starD[0]).to.eql(randomStartDate)\r",
							"    const EndD = Response.endDate.split('T')\r",
							"    pm.expect(EndD[0]).to.eql(randomEndDate)\r",
							"    const RegistrationDeadline = Response.registrationDeadline.split('T')\r",
							"    pm.expect(RegistrationDeadline[0]).to.eql(randomRegistrationDeadline)\r",
							"    // pm.expect(moment().utc(Response.endDate).format(\"YYYY-MM-DD\")).to.eql(randomEndDate);\r",
							"    // pm.expect(moment().utc(Response.registrationDeadline).format(\"YYYY-MM-DD\")).to.eql(randomRegistrationDeadline);\r",
							"});\r",
							"\r",
							"pm.test(\"It is in Draft state\", function () {\r",
							"    pm.expect(Response.status).to.eql(\"Draft\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userAuthToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{userAuthToken}}",
						"type": "text",
						"disabled": true
					},
					{
						"key": "X-Application-Id",
						"value": "{{applicationId}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "text/plain",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"notes\": \"\",\r\n\t\"tags\": [],\r\n\t\"endDate\": {{randomEndDate}},\r\n\t\"startDate\": {{randomStartDate}},\r\n\t\"registrationDeadline\": {{randomRegistrationDeadline}},\r\n\t\"access\": \"PublicFree\",\r\n\t\"entityType\": null,\r\n\t\"seatCount\": {{randomSeatCount}},\r\n\t\"description\": \"abc\",\r\n\t\"summary\": \"abc\",\r\n\t\"title\": \"Event Smoke testing {{randomID}}\",\r\n\t\"save\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/events",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "36.Get Event permissions for the logged in user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let Response = pm.response.json();\r",
							"console.log(Response)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that all the returned permissions are as expected\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.permissions.length).to.eql(6);\r",
							"\r",
							"    if (jsonData.permissions.length > 0){\r",
							"        pm.expect(JSON.stringify(jsonData.permissions[0]).replace(/['\"]+/g, '')).to.eql(\"create-event\");\r",
							"        pm.expect(JSON.stringify(jsonData.permissions[1]).replace(/['\"]+/g, '')).to.eql(\"manage-event\");\r",
							"        pm.expect(JSON.stringify(jsonData.permissions[2]).replace(/['\"]+/g, '')).to.eql(\"register-self\");\r",
							"        pm.expect(JSON.stringify(jsonData.permissions[3]).replace(/['\"]+/g, '')).to.eql(\"unregister-self\");\r",
							"        pm.expect(JSON.stringify(jsonData.permissions[4]).replace(/['\"]+/g, '')).to.eql(\"register-class\");\r",
							"        pm.expect(JSON.stringify(jsonData.permissions[5]).replace(/['\"]+/g, '')).to.eql(\"unregister-class\");\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userAuthToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Application-Id",
						"value": "{{applicationId}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/events/{{eventId}}/permissions/{{educator_UserAuthId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						"{{eventId}}",
						"permissions",
						"{{educator_UserAuthId}}"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "37.Get Events list - Pagination",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let Response = pm.response.json();\r",
							"console.log(Response)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Should return only 5 events\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.meta.count).to.eq(5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userAuthToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Application-Id",
						"value": "{{applicationId}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/events?limit=5",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events"
					],
					"query": [
						{
							"key": "limit",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "38.Create event session in Requested status",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// pm.variables.set(\"randomID\", Date.now());\r",
							"pm.environment.set(\"SessionDate\", pm.environment.get('randomEndDate'));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let Response = pm.response.json();\r",
							"console.log(Response)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userAuthToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Application-Id",
						"value": "{{applicationId}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"trackId\": null,\r\n\t\"notes\": \"\",\r\n\t\"keynote\": true,\r\n\t\"dates\": [\r\n\t\t{{SessionDate}}\r\n\t],\r\n\t\"duration\": 60,\r\n\t\"questions\": \"<p>test session</p>\",\r\n\t\"outcomes\": \"<p>test session</p>\",\r\n\t\"description\": \"<p>test session</p>\",\r\n\t\"grades\": [\r\n\t\t\"Grade1\",\r\n\t\t\"Grade2\"\r\n\t],\r\n\t\"subjects\": [\r\n\t\t\"Foreign Language\"\r\n\t],\r\n\t\"topic\": \"session 1 {{randomID}}\",\r\n\t\"type\": \"topic-presentation\",\r\n\t\"draft\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/events/{{eventId}}/sessions",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						"{{eventId}}",
						"sessions"
					]
				}
			},
			"response": []
		},
		{
			"name": "39.Publish the Event",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that response is not empty\", function() {\r",
							"    pm.expect(pm.response).to.not.equal(null);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userAuthToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "X-Application-Id",
						"value": "{{applicationId}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/events/{{eventId}}/published",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						"{{eventId}}",
						"published"
					]
				}
			},
			"response": []
		},
		{
			"name": "40.Send Message",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('educator_username'),\r",
							"    Password: pm.environment.get('educator_password'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/dashboard\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    {key: \"UserName\", value: pm.environment.get('educator_username')},\r",
							"    {key: \"Password\", value: pm.environment.get('educator_password')},\r",
							"    {key: \"redirect\", value: \"v5\"},\r",
							"    {key: \"AppName\", value: \"v5-qa4\"},\r",
							"    {key: \"SubDomain\", value: \"qa4\"},\r",
							"    {key: \"ReturnUrl\", value: \"/app/dashboard\"},\r",
							"    {key: \"RememberMe\", value: \"false\"}\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"        \r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let Response = pm.response.json();\r",
							"console.log(Response)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify isSaved property to be true\", function() {\r",
							"    // pm.expect(pm.response).to.have.property('isSaved', true);\r",
							"    pm.expect(Response).to.have.property(\"isSaved\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"receiverAuthIds\": [\r\n\t\t{{participant1_UserAuthId}}\r\n\t],\r\n\t\"subject\": \"Smoke Test\",\r\n\t\"body\": \"<p>Test message from nepris</p>\",\r\n\t\"loggedInUserAuthId\": 237257,\r\n\t\"messageAttachments\": [\r\n\t\t{\r\n\t\t\t\"attachmentUrl\": \"msg-attachments_8f923e8f-5e37-4063-9e39-66b4381a96c2.doc\",\r\n\t\t\t\"userFileName\": \"Doc1.doc\"\r\n\t\t}\r\n\t]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/SaveMessageRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"SaveMessageRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetVolunteerOpportunitiesRequest-PublicSession-DifferentGroup",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjExNTYyMiwiaWF0IjoxNjYwMTI3MDYyLCJleHAiOjE2NjAxMzA2NjIsImVtYWlsIjoibG1lYW5zQHByZXBrYy5vcmciLCJnaXZlbl9uYW1lIjoiTGl6IiwiZmFtaWx5X25hbWUiOiJNZWFucyIsIm5hbWUiOiJMaXogTWVhbnMiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJsbWVhbnMifQ.06uma6h_cAnE85iUjqx-2zymnb8XKEoLISAjS94HfEw",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"limit\": 200,\r\n    \"offset\": 0,\r\n    \"userAuthId\": 115622,\r\n    \"keyword\": \"\",\r\n    \"filters\": [\r\n        {\r\n            \"key\": \"matches\",\r\n            \"value\": \"companyMatches\"\r\n        }\r\n    ],\r\n    \"includePartnerFilter\": false,\r\n    \"subDomain\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://qa.nepris.com/app/json/reply/GetVolunteerOpportunitiesRequest",
					"protocol": "https",
					"host": [
						"qa",
						"nepris",
						"com"
					],
					"path": [
						"app",
						"json",
						"reply",
						"GetVolunteerOpportunitiesRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetVolunteerOpportunitiesRequest-PublicSession-SameGroup",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjY0NjQ4LCJpYXQiOjE2NjAxMjU5MTQsImV4cCI6MTY2MDEyOTUxNCwiZW1haWwiOiJjcndpbGNveDAxQGdtYWlsLmNvbSIsImdpdmVuX25hbWUiOiJDcmFpZyIsImZhbWlseV9uYW1lIjoiV2lsY294IiwibmFtZSI6IkNyYWlnIFdpbGNveCIsInByZWZlcnJlZF91c2VybmFtZSI6ImNyd2lsY294MDEifQ.jAEWaLIIIwo7018n1C7PTHpmxmrgYTpuMnv42ifb4_8",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"limit\": 200,\r\n    \"offset\": 105,\r\n    \"userAuthId\": 64648,\r\n    \"keyword\": \"\",\r\n    \"filters\": [\r\n        {\r\n            \"key\": \"matches\",\r\n            \"value\": \"browseAll\"\r\n        }\r\n    ],\r\n    \"includePartnerFilter\": false,\r\n    \"subDomain\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://qa.nepris.com/app/json/reply/GetVolunteerOpportunitiesRequest",
					"protocol": "https",
					"host": [
						"qa",
						"nepris",
						"com"
					],
					"path": [
						"app",
						"json",
						"reply",
						"GetVolunteerOpportunitiesRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "PermissionServices",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjE2NjMyNCwiaWF0IjoxNjY2MzUwNzg5LCJleHAiOjE2NjYzNTQzODksImVtYWlsIjoiam9hbi5nb3Jkb25AYWRyaWFuc2Qub3JnIiwiZ2l2ZW5fbmFtZSI6IkpvYW4iLCJmYW1pbHlfbmFtZSI6IkdvcmRvbiIsIm5hbWUiOiJKb2FuIEdvcmRvbiIsInByZWZlcnJlZF91c2VybmFtZSI6ImpvYW5tZ29yZG9uIn0",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://apitest.nepris.com/v1/events/697/permissions/52660",
					"protocol": "https",
					"host": [
						"apitest",
						"nepris",
						"com"
					],
					"path": [
						"v1",
						"events",
						"697",
						"permissions",
						"52660"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{Domain}}/{{path}}/GetPartnerCareerExplorerConfigRequest",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.clear();\r",
							"\r",
							"var PresneterPartnerUserName = pm.environment.get('crwilcox01@gmail.com');\r",
							"var PresneterPartnerPassword = pm.environment.get('password2021');\r",
							"\r",
							"var loginRequest = {\r",
							"    UserName: pm.environment.get('PresneterPartnerUserName'),\r",
							"    Password: pm.environment.get('PresneterPartnerPassword'),\r",
							"    redirect: \"v5\",\r",
							"    AppName: \"v5\",\r",
							"    SubDomain: \"v3\",\r",
							"    ReturnUrl: \"/app/events/my\"\r",
							"}\r",
							"\r",
							"var loginRequestForm = [\r",
							"    { key: \"UserName\", value: pm.environment.get('educator_username') },\r",
							"    { key: \"Password\", value: pm.environment.get('educator_password') },\r",
							"    { key: \"redirect\", value: \"v5\" },\r",
							"    { key: \"AppName\", value: \"v5-qa4\" },\r",
							"    { key: \"SubDomain\", value: \"qa4\" },\r",
							"    { key: \"ReturnUrl\", value: \"/app/dashboard\" },\r",
							"    { key: \"RememberMe\", value: \"false\" }\r",
							"];\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: pm.environment.get('idProviderUrl'),\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': \"application/x-www-form-urlencoded\",\r",
							"        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r",
							"        'Host': 'idtest.nepris.com',\r",
							"        'Origin': 'https://idtest.nepris.com',\r",
							"        'Referer': 'https://idtest.nepris.com/Account/Login?returnUrl=%2Fapp%2Fdashboard&app=v5-qa4&sd=qa4',\r",
							"\r",
							"    },\r",
							"    body: {\r",
							"        /*mode: \"raw\",\r",
							"        raw: JSON.stringify(loginRequest),*/\r",
							"        mode: \"formdata\",\r",
							"        formdata: loginRequestForm\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"subDomainName\": \" \"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Domain}}/{{path}}/GetPartnerCareerExplorerConfigRequest",
					"host": [
						"{{Domain}}"
					],
					"path": [
						"{{path}}",
						"GetPartnerCareerExplorerConfigRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://idtest.nepris.com/Account/Login?app=v5-qa4&returnUrl=/dashboard/my&p=85",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://idtest.nepris.com/Account/Login?app=v5-qa4&returnUrl=/dashboard/my&p=85",
					"protocol": "https",
					"host": [
						"idtest",
						"nepris",
						"com"
					],
					"path": [
						"Account",
						"Login"
					],
					"query": [
						{
							"key": "app",
							"value": "v5-qa4"
						},
						{
							"key": "returnUrl",
							"value": "/dashboard/my"
						},
						{
							"key": "p",
							"value": "85"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const moment = require('moment');",
					"",
					"var randomID = Date.now();",
					"pm.environment.set(\"randomID\", randomID)",
					"",
					"var commonTests = () => {",
					"    pm.test(\"Successful POST request\", function () {",
					"        pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
					"    });",
					"",
					"    pm.test(\"response must be valid and have a body\", function () {",
					"        pm.response.to.not.be.error; // info, success, redirection, clientError,  serverError, are other variants",
					"        pm.response.to.be.withBody;",
					"        pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
					"    });",
					"",
					"",
					"    pm.test(\"content type is present\", function () {",
					"        pm.response.to.have.header(\"content-type\");",
					"    });",
					"    ",
					"}",
					"pm.environment.set(\"commonTests\", commonTests.toString());",
					"",
					"pm.environment.set(\"timestampUtcIso8601more\", `${moment().add(_.random(13, 30), \"days\").format()}Z`);",
					"",
					"/* Auth ID's */",
					"pm.environment.set(\"educator_UserAuthId\", 239549)",
					"pm.environment.set(\"participant1_UserAuthId\",31729)",
					"// pm.environment.set(\"presenter_UserAuthId\", 239415)",
					"pm.environment.set(\"presenter_UserAuthId\", 52484)",
					"pm.environment.set(\"stu13Plus_UserAuthId\", 239493)",
					"",
					"/* user Credentials*/",
					"pm.environment.set(\"educator_username\",\"mshekar@nepris.com\")",
					"pm.environment.set(\"educator_password\", \"password2022\")",
					"pm.environment.set(\"presenter_username\", \"avi.duvdevani@gmail.com\")",
					"pm.environment.set(\"presenter_password\", \"password2021\")",
					"pm.environment.set(\"participant1_username\", \"frank.hubbard@pisd.edu\")",
					"pm.environment.set(\"participant1_password\", \"password2021\")",
					"pm.environment.set(\"stu13Plus_username\", \"SanathKumar\")",
					"pm.environment.set(\"stu13Plus_password\",\"password2021\")",
					"",
					"",
					"",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}